var RepromptDialog=function(t){Dialog.call(this,t,{additionalHeaderClasses:["icon","leftIcon"],dynamicHeight:!0,responsive:!1,buttonsInsideContent:!0,nextButtonText:Strings.translateString("Continue"),title:Strings.translateString("Reprompt"),confirmOnClose:!1,overlayDialog:!0}),this.numfailed=0};RepromptDialog.prototype=Object.create(Dialog.prototype),RepromptDialog.prototype.constructor=RepromptDialog,function(){var t=Strings.translateString("Invalid Password.");RepromptDialog.prototype.open=function(t){this.numfailed=0,Dialog.prototype.open.call(this,t)},RepromptDialog.prototype.success=function(){"function"==typeof this.data.successCallback&&this.data.successCallback()},RepromptDialog.prototype.error=function(){this.numfailed<2?(this.numfailed++,this.addError("password",t),this.inputFields.password.focus()):this.close()},RepromptDialog.prototype.validateReprompt=function(t){if("function"!=typeof this.data.validate)throw"Must override RepromptDialog.prototype.validate or pass a validate callback to dialogs.reprompt.open().";this.data.validate(t)},RepromptDialog.prototype.handleSubmit=function(t){LPRequest.makeRequest(this.createDynamicHandler(function(t){t.repromptFailed=function(o){return function(){o.error(),t.error("")}}(this),this.validateReprompt(t)}),{params:t,success:this.createDynamicHandler(this.success)})}}();